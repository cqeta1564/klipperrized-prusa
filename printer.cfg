# This file contains pin mappings and reasonable defaults for Prusa i3 MK3S
# printers. It will work with MK3 (non-S) by selecting the alternative filament
# sensor. References to common community mods are included as well.
#
# Note: The Einsy boards sold by Prusa have defective firmware on the
# usb-to-serial chip that makes the boards unusable with Klipper through USB.
# While flashing Klipper firmware must be done over USB, the board can be used
# via serial with no additional modification.


# ================================
# =            SENSORS           =
# ================================
[temperature_sensor PC]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor einsy_board]
sensor_pin: PF6
sensor_type: TDK NTCG104LH104JT1
min_temp: -10
max_temp: 70

#[temperature_sensor enclosure_temp]
#sensor_type: BME280
#i2c_mcu: host
#min_temp: -20
#max_temp: 120

#[adxl345]
#cs_pin: host:PB2

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125, 105, 20  # an example

[probe]
pin: PB4
x_offset: 24
y_offset: 5
#z_offset: 0
speed: 10.0
samples: 3 #Sampling, primarily for bed mesh. 3 is fine for normal PINDA probes.
samples_result: average
#sample_retract_dist: 1.0 #zkopirovano z druhyho configu, neni za potrebi, ale muze se hodit


# ================================
# =           STEPPERS           =
# ================================
[input_shaper]
shaper_freq_x: 58.0         #61.4  38.6  55.2  53.4      52.6
shaper_freq_y: 64.8         #39.2  44.4  33.6  57.6      56.8
shaper_type_x: ei           #zv    mzv   ei    2hump_ei  3hump_ei
shaper_type_y: 2hump_ei     #zv    mzv   ei    2hump_ei  3hump_ei

[stepper_x]
step_pin: PC0
dir_pin: !PL0
enable_pin: !PA7
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
#step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
endstop_pin: tmc2130_stepper_x:virtual_endstop
position_endstop: 0
position_max: 250
homing_speed: 50
homing_retract_dist: 0
rotation_distance: 32
microsteps: 16

[tmc2130 stepper_x]
cs_pin: PG0
interpolate: True
run_current: .281738 #.281738
hold_current: .281738 #.281738
sense_resistor: 0.220
diag1_pin: !PK2
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_y]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
#Step distances for common configurations, 16 tooth and 1.8 degree is Prusa.stock, but many people have 0.9 degree steppers to remove VFAs.
#step_distance: .01 #16 pin tooth wheel, 1.8 degree stepper.
#step_distance: .0125 #20 tooth drive wheel, 1.8 degree stepper.
#step_distance: 0.00625 #20 tooth drive wheel. 0.9 degree stepper.
#step_distance: .005 #16 tooth drive wheel, 0.9 degree stepper.
endstop_pin: tmc2130_stepper_y:virtual_endstop
position_endstop: -4
position_max: 210
position_min: -4
homing_speed: 50
homing_retract_dist: 0
rotation_distance: 32
microsteps: 16

[tmc2130 stepper_y]
cs_pin: PG2
interpolate: True
run_current: .3480291 #.281738
hold_current: .3480291 #.281738
#Run at the same current as X-axis for lower noise, and to keep steppers cooler.
#This should work, but if Y starts skipping steps, you may need to bump up to Prusa stock.
#run_current: .3480291
#hold_current: .3480291
sense_resistor: 0.220
diag1_pin: !PK7
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
#driver_PWM_AMPL: 235
driver_PWM_AMPL: 230
driver_PWM_AUTOSCALE: True
driver_SGT: 3

[stepper_z]
step_pin: PC2
dir_pin: !PL2
enable_pin: !PA5
#step_distance: .0025
endstop_pin: probe:z_virtual_endstop
#Please update the Z height in the Tram_Z macro below.
position_max: 200 #This is the MK3S default.
#position_max: 210 #Use this for a stock MK3 non-S, BMG, or Bear extruders for the MK3S.
position_min: -2
homing_speed: 13.333
rotation_distance: 8
microsteps: 16

[tmc2130 stepper_z]
cs_pin: PK5
interpolate: True
run_current: .53033
hold_current: .53033
sense_resistor: 0.220
diag1_pin: !PK6
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 200
driver_PWM_AUTOSCALE: True
driver_SGT: 4

[extruder]
step_pin: PC3
dir_pin: PL6
enable_pin: !PA4
#step_distance: .0035714 #Stock Prusa or Bear extruder.
#step_distance: .0012048 #BMG or other 3:1 ratio extruder.
nozzle_diameter: 0.400
filament_diameter: 1.750
# The max extrude cross section is increased for the purge line, but in theory
# its probably a bad idea to have it this large, as its purpose is to catch
# poorly sliced objects that extrude too much for small moves.
max_extrude_cross_section: 500.0
# Allows to load filament and purge up to 500mm
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 5000.0
heater_pin: PE5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF0
#control: pid
#pid_Kp: 16.13
#pid_Ki: 1.1625
#pid_Kd: 56.23
min_temp: 0
max_temp: 305
microsteps: 32
rotation_distance: 22.85696
full_steps_per_rotation: 200
pressure_advance: 0.0 # Do not set, prusaslicer has a nice tool and with combination of gcode macro sets PA automatically

[tmc2130 extruder]
cs_pin: PK4
interpolate: True
run_current: .513757
hold_current: .513757
sense_resistor: 0.220
diag1_pin: !PK3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 0
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_FREQ: 2
driver_PWM_GRAD: 4
driver_PWM_AMPL: 240
driver_PWM_AUTOSCALE: True
driver_SGT: 3


# ================================
# =        OTHER HARDWARE        =
# ================================
[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
#control: pid
#pid_Kp: 126.13
#pid_Ki: 4.3
#pid_Kd: 924.76
min_temp: 0
max_temp: 125

[heater_fan nozzle_cooling_fan]
pin: PH5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

# Part Cooling Fan
[fan]
pin: PH3

[mcu]
#serial: /dev/serial0  # If you are using internal RPI serial port
serial: /dev/ttyACM0 # If you are using RPI via USB connection to printer
#baud: 256000
restart_method: command

#[mcu host]
#serial: /tmp/klipper_host_mcu

[display]
lcd_type: hd44780
rs_pin: PD5
e_pin: PF7
d4_pin: PF5
d5_pin: PG4
d6_pin: PH7
d7_pin: PG3
encoder_pins: ^PJ1,^PJ2
click_pin: ^!PH6

[output_pin LCD_backlight_pin]
pin: PE3
pwm: True
hardware_pwm: True
value: 0.25 # 30% backlight
shutdown_value: 1 # Back to full backlight (without PWM) on restart
cycle_time: 0.001 # Default 0.1s cycle time flickers as hell

# Keeps Debug LED off / not floating
[static_digital_output debug_led]
pins: !PB7

[output_pin BEEPER_pin]
pin: PH2
pwm: True
value: 0
shutdown_value:0
cycle_time: 0.001
scale: 1000

# These settings are not that important because prusaslicer sets them automatically, which I recommend using
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 4700
max_accel_to_decel: 2350
max_z_velocity: 50
max_z_accel: 300
square_corner_velocity: 5

#MK3S Filament IR Barrier Sensor.
[filament_switch_sensor fsensor]
pause_on_runout: True
runout_gcode:
    M118 Filament Runout Detected
    M600
insert_gcode:
    M118 Filament Load Detected
    LOAD_FILAMENT
event_delay: 3.0
pause_delay: 0.01
switch_pin: !PK0

#MK3 (non-S) Filament Sensor.
#[pat9125 fsensor]
#pause_on_runout: True
#runout_gcode:
# M118 Filament Runout Detected
#  M600 X250 Y-3 Z10
#insert_gcode:
# M118 Filament Load Detected
#  LOAD_FILAMENT
#invert_axis: True
#oq_enable: True


# ================================
# =        INICIAL CONFIG        =
# ================================
[bed_mesh]
#algorithm: bicubic
#fade_end: 10
#faulty_region_1_max: 120.0, 74.0 
#faulty_region_1_min: 85.0, 45.0 # 103,69
#faulty_region_2_max: 125.0, 165
#faulty_region_2_min: 70, 110 # 103, 137
horizontal_move_z: 4 #was 2
mesh_max: 240,198
mesh_min: 35, 6
mesh_pps: 0,0 #Don't generate interperlated points so our mesh is compatible with nylock calculators like https://pcboy.github.io/g81_relative/
probe_count: 7,7
speed: 200

#Home in lower, lefthand corner.
[homing_override]
gcode:
# G1 Z50
 G28 X0 Y200
 G1 X1 Y0 F5000
# G1 X1 Y200 F5000 #Home vlevo vzadu
# G1 X220 Y0 F5000 #Home vpravo vepredu
 G28 Z0
axes: Z
set_position_x: 0
set_position_y: 0
set_position_z: 0

[respond]
default_type: command

[pause_resume]

[delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

[display_status]

[force_move]
enable_force_move: TRUE

[virtual_sdcard]
path: ~/printer_data/gcodes

#If not using with Octoprint remove the menu.
[menu __main __octoprint]
type: disabled

[exclude_object]

[gcode_arcs]
resolution: 0.008


# ================================
# =      PRUSASLICER MACROS      =
# ================================
[gcode_macro G80]
gcode:
# G28 #Avoid double homing if using PrusaSlicer or other default gcode.
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z0.4 F4000

[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT

[gcode_macro M601]
gcode:
    PAUSE

[gcode_macro _M300]
gcode:
    SET_PIN PIN=BEEPER_pin VALUE={1000}
    G4 P{100}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro _M600]
variable_extr_temp: 0
gcode:
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{10}
    G90
    G1 X{100} Y{0} F3000

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}


# ================================
# =        KLIPPER MACROS        =
# ================================

[gcode_macro PRINT_START]
gcode: 
    # Parameters
    {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
    {% set BED_TEMP = params.BED|float %}

    M107
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    
    M190 S{BED_TEMP}            ; set and wait for bed to reach temp

    {% if params.ENCLOSURE is defined%}
        {% set ENCLOSURE_TEMP = params.ENCLOSURE|float %}
        M118 Hlidej si teplotu v krabici
        #M109 S{ENCLOSURE_TEMP} T1
#        TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" [MINIMUM={ENCLOSURE_TEMP}]
    {% endif %}

    G28                            ; home all axes
    {% if params.AREA_START is defined%}
        {% set a = params.AREA_START.split(",")[0]|float %}
    	{% set b = params.AREA_START.split(",")[1]|float %}
    	{% set c = params.AREA_END.split(",")[0]|float %}
    	{% set d = params.AREA_END.split(",")[1]|float %}
  		BED_MESH_CALIBRATE AREA_START={a},{b} AREA_END={c},{d} ; mesh
      {% else %}
          G80
    {% endif %}
    
    M109 S{EXTRUDER_TEMP}       ; set and wait for hot end to reach temp

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{1} F2100
    G1 Z{10}
    G90
    G1 X{230} Y{230} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    G1 E{1} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#This replicates Prusa's calibrate Z funtionality.
[gcode_macro Tram_Z]
gcode:
    G28
    G1 X125 Y105
    G1 Z200 F1000 #Update with Z height.
    FORCE_MOVE STEPPER=stepper_z Distance=50 Velocity=10
    G28 Z

[gcode_macro Tram_Z_Fucked_Up]
gcode:
    G28
    G1 Z50 F1000
    G1 X125 Y105
    G1 Z200 F1000 #Update with Z height.
    FORCE_MOVE STEPPER=stepper_z Distance=50 Velocity=10
    G1 Z150 F1000
    G28

#Load and Unload Macros.
[gcode_macro LOAD_FILAMENT]
gcode:
    M117 Loading Filament...
    G92 E0.0
    G91
    G1 E40 F400
    G1 E30 F400
    G1 E25 F200
    G90
    G92 E0.0
    M400
    M117 Load Complete
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M117 Unloading Filament...
    G92 E0.0
    G91
    G1 E-45 F5200
    G1 E-15 F1000
    G1 E-20 F1000
    G90
    G92 E0.0
    M400
    M117 Remove Filament Now!
    M300 S300 P1000
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro CURRENT_X]
gcode:
  {% if params.AMPS is defined and params.AMPS|float < 1 %}
  		{% set A = params.AMPS|float %}
  		SET_TMC_CURRENT STEPPER=stepper_x CURRENT={A} HOLDCURRENT={A}
        {% else %}
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT=.281738 HOLDCURRENT=.281738
      	{% endif %}

[gcode_macro CURRENT_Y]
gcode:
  {% if params.AMPS is defined and params.AMPS|float < 1 %}
  		{% set A = params.AMPS|float %}
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={A} HOLDCURRENT={A}
        {% else %}
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT=.3480291 HOLDCURRENT=.3480291
      	{% endif %}

[gcode_macro M572]
gcode:
  {% set i = params.S %}
  SET_PRESSURE_ADVANCE ADVANCE={i}

[gcode_macro M201]
gcode:
  {% set x = params.X|float %}
  {% set f = params.X|float / 2 %}
  SET_VELOCITY_LIMIT ACCEL={x} ACCEL_TO_DECEL={f}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.077
#*# pid_ki = 0.931
#*# pid_kd = 119.351
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.535
#*# pid_ki = 0.617
#*# pid_kd = 1119.003
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.475000, 0.508750, 0.518750, 0.568750
#*# 	0.491250, 0.533750, 0.568750, 0.571250
#*# 	0.482500, 0.522500, 0.547500, 0.555000
#*# 	0.483750, 0.518750, 0.542500, 0.548750
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.2
#*# min_x = 100.09
#*# max_x = 150.28
#*# min_y = 77.72
#*# max_y = 129.11
#*#
#*# [probe]
#*# z_offset = 1.780
